{
  "id": "1",
  "cells": [
    {
      "i": "10fe4d68-4a2d-495d-bc6f-a0d38e1bf8b9",
      "x": 0,
      "y": 0,
      "w": 4,
      "h": 9,
      "name": "Number of Calls for Each Node",
      "queries": [
        {
          "query": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and ((r._field == \"elapsed_ms\") or (r._field == \"success\")))\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> duplicate(column: \"node\", as: \"node\")\n  |> group(columns: [\"node\", \"version\"])\n  |> keep(columns: [\"node\", \"workflow\", \"version\", \"elapsed_ms\", \"success\"])\n  |> reduce(fn: (r, accumulator) => ({\n   success: if r.success == true then accumulator.success + 1 else accumulator.success,\n   fail: if r.fail == true then accumulator.fail + 1 else accumulator.fail,\n   total: accumulator.total +1,\n   }), identity: {total: 0, success: 0, fail: 0})\n  |> group(columns: [\"version\"])\n  |> map(fn: (r) => ({ \"1\": r.version, \"2\": r.node, \"3\": r.total, \"4\": r.success, \"5\": r.fail})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Version\", \"2\": \"Called Node\", \"3\": \"Number of Calls\", \"4\": \"Number of success\", \"5\": \"Number of fails\"})\n  |> sort(columns: [\"Version\"], desc: false)\n  |> sort(columns: [\"Called Node\"], desc: false)",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and ((r._field == \"elapsed_ms\") or (r._field == \"success\")))\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> duplicate(column: \"node\", as: \"node\")\n  |> group(columns: [\"node\", \"version\"])\n  |> keep(columns: [\"node\", \"workflow\", \"version\", \"elapsed_ms\", \"success\"])\n  |> reduce(fn: (r, accumulator) => ({\n   success: if r.success == true then accumulator.success + 1 else accumulator.success,\n   fail: if r.fail == true then accumulator.fail + 1 else accumulator.fail,\n   total: accumulator.total +1,\n   }), identity: {total: 0, success: 0, fail: 0})\n  |> group(columns: [\"version\"])\n  |> map(fn: (r) => ({ \"1\": r.version, \"2\": r.node, \"3\": r.total, \"4\": r.success, \"5\": r.fail})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Version\", \"2\": \"Called Node\", \"3\": \"Number of Calls\", \"4\": \"Number of success\", \"5\": \"Number of fails\"})\n  |> sort(columns: [\"Version\"], desc: false)\n  |> sort(columns: [\"Called Node\"], desc: false)",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#00C9FF",
          "name": "laser",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "Version",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Called Node",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Number of Calls",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Number of success",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Number of fails",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/5/cells/10fe4d68-4a2d-495d-bc6f-a0d38e1bf8b9"
      }
    },
    {
      "i": "fd906621-635c-4943-90ef-be14e3dd84d4",
      "x": 4,
      "y": 0,
      "w": 8,
      "h": 5,
      "name": "Number of Results per Request",
      "queries": [
        {
          "query": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"classified_emails\" )\n  |> duplicate(column: \"_value\", as: \"Result\")\n  |> group(columns: [\"version\", \"_field\", \"Result\"])\n  |> count()\n  |> group(columns: [\"version\"])\n  |> map(fn: (r) => ({ \"1\": r.version, \"2\": r.Result, \"3\": r._value})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Version\", \"2\": \"Result\", \"3\": \"Count\" })\n  |> sort(columns: [\"Version\", \"Result\"], desc: false)\n",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"classified_emails\" )\n  |> duplicate(column: \"_value\", as: \"Result\")\n  |> group(columns: [\"version\", \"_field\", \"Result\"])\n  |> count()\n  |> group(columns: [\"version\"])\n  |> map(fn: (r) => ({ \"1\": r.version, \"2\": r.Result, \"3\": r._value})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Version\", \"2\": \"Result\", \"3\": \"Count\" })\n  |> sort(columns: [\"Version\", \"Result\"], desc: false)\n",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#00C9FF",
          "name": "laser",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": false
      },
      "fieldOptions": [
        {
          "internalName": "Version",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Result",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Count",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/5/cells/fd906621-635c-4943-90ef-be14e3dd84d4"
      }
    },
    {
      "i": "377e7df6-b0d8-4227-90e2-8a1eb1c17901",
      "x": 0,
      "y": 9,
      "w": 12,
      "h": 4,
      "name": "Activity Plot",
      "queries": [
        {
          "query": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" )\n  |> keep(columns: [\"_time\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" )\n  |> keep(columns: [\"_time\"])\n  |> map(fn: (r) => ({ r with _value: 1 }))\n  |> group()\n  |> aggregateWindow(every: autoInterval, fn: sum)",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "Total Requests",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "line",
      "colors": [
        {
          "id": "506c2338-ec45-489b-bac9-c2e9aa9549bd",
          "type": "scale",
          "hex": "#31C0F6",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "7c9fd469-4e5f-44ea-8d36-ce0cbef6b11c",
          "type": "scale",
          "hex": "#A500A5",
          "name": "Nineteen Eighty Four",
          "value": "0"
        },
        {
          "id": "50590f19-0857-49ab-84fb-ab1f4a6c7c1f",
          "type": "scale",
          "hex": "#FF7E27",
          "name": "Nineteen Eighty Four",
          "value": "0"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "_time",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "_value",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/5/cells/377e7df6-b0d8-4227-90e2-8a1eb1c17901"
      }
    },
    {
      "i": "b036eacc-b58a-4af3-bbd4-869e99e66b8a",
      "x": 4,
      "y": 5,
      "w": 8,
      "h": 4,
      "name": "Nodes Processing Time (ms)",
      "queries": [
        {
          "query": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])\n  |> map(fn: (r) => ({ \"1\": r.workflow, \"2\": r.node, \"3\": r.min, \"4\": r.max, \"5\": r.avg, \"6\": r.total})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Workflow\", \"2\": \"Node\", \"3\": \"Min\", \"4\": \"Max\", \"5\": \"Avg\", \"6\": \"Total execution time\" })",
          "queryConfig": {
            "database": "",
            "measurement": "",
            "retentionPolicy": "",
            "fields": [],
            "tags": {},
            "groupBy": {
              "time": "",
              "tags": []
            },
            "areTagsAccepted": false,
            "rawText": "from(bucket: \"demo/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement == \"node_elapsed_time\" and (r._field == \"elapsed_ms\"))\n  |> keep(columns: [\"node\", \"workflow\", \"_value\"])\n  |> group(columns: [\"workflow\", \"node\"])\n  |> reduce(fn: (r, accumulator) => ({\n    min: if r._value < accumulator.min then r._value else accumulator.min,\n    max: if r._value > accumulator.max then r._value else accumulator.max,\n    total: r._value + accumulator.total,\n    count: accumulator.count + 1.0\n   }), identity: {min: 999999999.0, max: 0.0, total: 0.0, count: 0.0})\n  |> map(fn: (r) => ({ r with avg: r.total / r.count }))\n  |> drop(columns: [\"count\"])\n  |> group(columns: [\"workflow\"])\n  |> map(fn: (r) => ({ \"1\": r.workflow, \"2\": r.node, \"3\": r.min, \"4\": r.max, \"5\": r.avg, \"6\": r.total})) // Hack due to no reorder column support\n  |> rename(columns: { \"1\": \"Workflow\", \"2\": \"Node\", \"3\": \"Min\", \"4\": \"Max\", \"5\": \"Avg\", \"6\": \"Total execution time\" })",
            "range": null,
            "shifts": null
          },
          "source": "",
          "type": "flux"
        }
      ],
      "axes": {
        "x": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        },
        "y2": {
          "bounds": ["", ""],
          "label": "",
          "prefix": "",
          "suffix": "",
          "base": "10",
          "scale": "linear"
        }
      },
      "type": "table",
      "colors": [
        {
          "id": "base",
          "type": "text",
          "hex": "#00C9FF",
          "name": "laser",
          "value": "-1000000000000000000"
        }
      ],
      "legend": {},
      "tableOptions": {
        "verticalTimeAxis": true,
        "sortBy": {
          "internalName": "time",
          "displayName": "",
          "visible": true
        },
        "wrapping": "truncate",
        "fixFirstColumn": true
      },
      "fieldOptions": [
        {
          "internalName": "Workflow",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Node",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Min",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Max",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Avg",
          "displayName": "",
          "visible": true
        },
        {
          "internalName": "Total",
          "displayName": "",
          "visible": true
        }
      ],
      "timeFormat": "MM/DD/YYYY HH:mm:ss",
      "decimalPlaces": {
        "isEnforced": true,
        "digits": 2
      },
      "note": "",
      "noteVisibility": "default",
      "links": {
        "self": "/chronograf/v1/dashboards/5/cells/b036eacc-b58a-4af3-bbd4-869e99e66b8a"
      }
    }
  ],
  "templates": [],
  "name": "Classificator",
  "organization": "default",
  "links": {
    "self": "/chronograf/v1/dashboards/1",
    "cells": "/chronograf/v1/dashboards/1/cells",
    "templates": "/chronograf/v1/dashboards/1/templates"
  }
}
